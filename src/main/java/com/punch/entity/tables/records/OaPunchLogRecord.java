/*
 * This file is generated by jOOQ.
 */
package com.punch.entity.tables.records;


import com.punch.entity.tables.OaPunchLog;

import java.time.LocalDateTime;

import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class OaPunchLogRecord extends UpdatableRecordImpl<OaPunchLogRecord> implements Record4<String, String, String, LocalDateTime> {

    private static final long serialVersionUID = -1034150651;

    /**
     * Setter for <code>punch.oa_punch_log.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>punch.oa_punch_log.id</code>.
     */
    @NotNull
    @Size(max = 32)
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>punch.oa_punch_log.user_id</code>.
     */
    public void setUserId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>punch.oa_punch_log.user_id</code>.
     */
    @Size(max = 32)
    public String getUserId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>punch.oa_punch_log.memo</code>.
     */
    public void setMemo(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>punch.oa_punch_log.memo</code>.
     */
    @Size(max = 1024)
    public String getMemo() {
        return (String) get(2);
    }

    /**
     * Setter for <code>punch.oa_punch_log.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>punch.oa_punch_log.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<String, String, String, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<String, String, String, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return OaPunchLog.OA_PUNCH_LOG.ID;
    }

    @Override
    public Field<String> field2() {
        return OaPunchLog.OA_PUNCH_LOG.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return OaPunchLog.OA_PUNCH_LOG.MEMO;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return OaPunchLog.OA_PUNCH_LOG.CREATE_TIME;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getMemo();
    }

    @Override
    public LocalDateTime component4() {
        return getCreateTime();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getMemo();
    }

    @Override
    public LocalDateTime value4() {
        return getCreateTime();
    }

    @Override
    public OaPunchLogRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public OaPunchLogRecord value2(String value) {
        setUserId(value);
        return this;
    }

    @Override
    public OaPunchLogRecord value3(String value) {
        setMemo(value);
        return this;
    }

    @Override
    public OaPunchLogRecord value4(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public OaPunchLogRecord values(String value1, String value2, String value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached OaPunchLogRecord
     */
    public OaPunchLogRecord() {
        super(OaPunchLog.OA_PUNCH_LOG);
    }

    /**
     * Create a detached, initialised OaPunchLogRecord
     */
    public OaPunchLogRecord(String id, String userId, String memo, LocalDateTime createTime) {
        super(OaPunchLog.OA_PUNCH_LOG);

        set(0, id);
        set(1, userId);
        set(2, memo);
        set(3, createTime);
    }
}
